{"version":3,"sources":["SplashView.js"],"names":[],"mappings":"ujBAAA,4B;AACA;AACA;AACA,yC;;AAEM,U;AACF,oBAAY,KAAZ,CAAmB,OAAnB,CAA4B;AAClB,KADkB,CACX,OADW;;AAGxB,MAAK,KAAL,CAAa;AACT,cAAe,GAAI,uBAAS,KAAb,CAAmB,CAAnB,CADN,CAAb,CAHwB;;;AAOjB,cAPiB,CAOC,MAAK,KAPN,CAOjB,cAPiB;;AASxB,MAAK,KAAL,CAAW,aAAX,CAAyB,WAAzB,CAAqC,cAAa,IAAX,MAAW,MAAX,KAAW;AAC9C,GAAG,QAAU,CAAb,CAAgB;AACZ;AACH;AACJ,CAJD,EATwB;AAc3B,C;;AAEQ;AACL,QAAQ,GAAR,CAAY,KAAK,KAAjB;AACA;AACI,oDAAU,IAAV,EAAe,MAAO,CAAC,OAAO,SAAR,CAAmB,CAAC,QAAS,KAAK,KAAL,CAAW,aAArB,CAAnB,CAAtB;AACI,iDAAM,MAAO,OAAO,KAApB,eADJ;AAEI,iDAAM,MAAO,OAAO,cAApB,iBAFJ;AAGI,kDAAO,MAAO,OAAO,SAArB,CAAgC,OAAQ,QAAQ,2BAAR,CAAxC,EAHJ,CADJ;;;AAOH,C;;AAEmB;AAChB,sBAAS,MAAT;AACI,KAAK,KAAL,CAAW,aADf;AAEI,CAAC,QAAS,CAAV,CAAa,SAAU,IAAvB,CAA6B,MAAO,IAApC,CAFJ;AAGE,KAHF;AAIH,C;;;AAGL,GAAM,WAAY;AACd,OAAQ,iBAAU,MADJ;AAEd,eAAgB,iBAAU,IAFZ,CAAlB;;;AAKA,WAAW,SAAX,CAAuB,SAAvB;;AAEA,QAAS,OAAT,OAA0B,IAAT,OAAS,OAAT,MAAS;AACtB,MAAO,CAAC,aAAD,CAAP;AACH,C;;AAEc,wBAAQ,MAAR,EAAgB,UAAhB,C;;AAEf,GAAM,QAAS,wBAAW,MAAX,CAAkB;AAC7B,UAAW;AACP,KAAM,CADC;AAEP,gBAAiB,SAFV;AAGP,WAAY,QAHL;AAIP,UAAW,SAJJ,CADkB;;AAO7B,MAAO;AACH,UAAW,QADR;AAEH,UAAW,QAFR;AAGH,SAAU,EAHP;AAIH,QAAS,EAJN;AAKH,UAAW,GALR,CAPsB;;AAc7B,eAAgB;AACZ,QAAS,EADG;AAEZ,SAAU,EAFE;AAGZ,UAAW,CAHC,CAda;;AAmB7B,UAAW;AACP,UAAW,EADJ;AAEP,MAAO,GAFA;AAGP,OAAQ,GAHD,CAnBkB,CAAlB,CAAf","file":"SplashView-compiled.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport {Actions} from 'react-native-router-flux';\nimport {connect} from 'react-redux';\nimport { View, Text, Image, StyleSheet, NavigatorExperimental, Animated } from 'react-native';\n\nclass SplashView extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            fadeAnimation: new Animated.Value(1)\n        };\n\n        const {onAnimationEnd} = this.props;\n\n        this.state.fadeAnimation.addListener(({value}) => {\n            if(value === 0) {\n                onAnimationEnd();\n            }\n        });\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <Animated.View style={[styles.container, {opacity: this.state.fadeAnimation}]}>\n                <Text style={styles.title}>Doodle Now</Text>\n                <Text style={styles.secondaryTitle}>for Stand Up</Text>\n                <Image style={styles.mainImage} source={require('../../images/act_logo.png')} />\n            </Animated.View>\n        );\n    }\n\n    componentDidMount() {\n        Animated.timing(\n            this.state.fadeAnimation,\n            {toValue: 0, duration: 1000, delay: 1000}\n        ).start();\n    }\n}\n\nconst propTypes = {\n    routes: PropTypes.object,\n    onAnimationEnd: PropTypes.func,\n};\n\nSplashView.PropTypes = propTypes;\n\nfunction select({routes}) {\n    return {routes};\n}\n\nexport default connect(select)(SplashView);\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f6f6f6',\n        alignItems: \"center\",\n        alignSelf: \"stretch\"\n    },\n    title: {\n        alignSelf: 'center',\n        textAlign: \"center\",\n        fontSize: 30,\n        opacity: .6,\n        marginTop: 142\n    },\n    secondaryTitle: {\n        opacity: .5,\n        fontSize: 20,\n        marginTop: 5\n    },\n    mainImage: {\n        marginTop: 61,\n        width: 143,\n        height: 143,\n    },\n});"]}