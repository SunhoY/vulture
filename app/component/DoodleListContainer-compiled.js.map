{"version":3,"sources":["DoodleListContainer.js"],"names":[],"mappings":"ujBAAA,4B;AACA;AACA,wC;AACA,8D;AACA,uC;;AAEM,mB;AACF,6BAAY,KAAZ,CAAmB,OAAnB,CAA4B;AAClB,KADkB,CACX,OADW;;AAGxB,MAAK,KAAL,CAAa;AACT,WAAY,GAAI,uBAAS,UAAb,CAAwB,CAAE,cAAe,uBAAC,IAAD,CAAO,IAAP,QAAgB,QAAS,IAAzB,EAAjB,CAAxB,CADH,CAAb,CAHwB;;AAM3B,C;;AAEmB;AAChB,QAAQ,GAAR,CAAY,KAAK,KAAjB,EADgB;AAEe,KAAK,KAFpB,CAET,KAFS,QAET,KAFS,CAEF,GAFE,QAEF,GAFE,CAEG,QAFH,QAEG,QAFH;AAGhB,SAAS,CAAC,KAAM,MAAP,CAAT;;AAEA,GAAI,iBAAkB,2BAAiB,YAAjB,CAA8B,SAA9B,CAAtB;AACA,gBAAgB,YAAhB,CAA6B,WAA7B,EAA0C,OAA1C,CAAkD,KAAlD,EAAyD,KAAzD,CAA+D,GAA/D,EAAoE,EAApE,CAAuE,OAAvE,CAAgF,SAAC,QAAD,CAAc;AAC1F,GAAI,SAAU,EAAd;AACA,SAAS,OAAT,CAAiB,SAAC,KAAD,CAAW;AACxB,GAAI,QAAS,MAAM,GAAN,EAAb;AACA,QAAQ,IAAR,CAAa;AACT,QAAS,OAAO,OADP;AAET,UAAW,OAAO,SAFT;AAGT,SAAU,OAAO,QAAP,EAAmB,OAAO,QAAP,GAAoB,EAAvC,CAA4C,CAAC,IAAK,OAAO,QAAb,CAA5C,CAAqE,QAAQ,2BAAR,CAHtE;AAIT,MAAO,OAAO,KAJL;AAKT,IAAK,OAAO,GAAP,EAAc,IALV,CAAb;;AAOH,CATD;;AAWA,QAAQ,GAAR,CAAY,OAAZ;;AAEA,OAAK,QAAL,CAAc;AACV,WAAY,OAAK,KAAL,CAAW,UAAX,CAAsB,aAAtB,CAAoC,QAAQ,OAAR,EAApC,CADF,CAAd;;AAGH,CAlBD;AAmBH,C;;AAEQ;AACL,QAAQ,GAAR,CAAY,KAAK,KAAjB;AACA;AACI;AACI,oDAAY,QAAS,KAAK,KAAL,CAAW,UAAhC,EADJ,CADJ;;;AAKH,C;;;AAGL,QAAS,OAAT,MAAsC,IAArB,OAAqB,MAArB,MAAqB,CAAb,WAAa,MAAb,WAAa;AAClC,MAAO,CAAC,aAAD,CAAS,uBAAT,CAAP;AACH,C;;AAEc,wBAAQ,MAAR,EAAgB,mBAAhB,C","file":"DoodleListContainer-compiled.js","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, ListView, View, Text } from 'react-native';\nimport DoodleList from './DoodleList';\nimport FirebaseDatabase from '../firebase/FirebaseDatabase';\nimport { connect } from 'react-redux';\n\nclass DoodleListContainer extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            dataSource: new ListView.DataSource({ rowHasChanged: (row1, row2) => row1 !== row2 })\n        };\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        const {start, end, dispatch} = this.props;\n        dispatch({type: \"temp\"});\n\n        var doodleReference = FirebaseDatabase.getReference(\"doodles\");\n        doodleReference.orderByChild(\"createdAt\").startAt(start).endAt(end).on(\"value\", (snapShot) => {\n            var doodles = [];\n            snapShot.forEach((child) => {\n                var doodle = child.val();\n                doodles.push({\n                    content: doodle.content,\n                    createdAt: doodle.createdAt,\n                    imageUrl: doodle.imageUrl || doodle.imageUrl === \"\" ? {uri: doodle.imageUrl} : require(\"../../images/act_logo.png\"),\n                    title: doodle.title,\n                    url: doodle.url || null\n                })\n            });\n\n            console.log(doodles);\n\n            this.setState({\n                dataSource: this.state.dataSource.cloneWithRows(doodles.reverse())\n            })\n        });\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <View>\n                <DoodleList doodles={this.state.dataSource} />\n            </View>\n        );\n    }\n}\n\nfunction select({routes, someReducer}){\n    return {routes, someReducer};\n}\n\nexport default connect(select)(DoodleListContainer);"]}